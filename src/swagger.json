{
    "paths": {
        "/api/v1/users": {
            "get": {
                "summary": "Retrieves a list of all users",
                "tags": ["User Management"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "The page number to retrieve."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        },
                        "description": "The number of users per page."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "fullName",
                                "-fullName",
                                "createdAt",
                                "-createdAt"
                            ],
                            "default": "id"
                        },
                        "description": "The field to sort by. Use a '-' prefix for descending order (e.g., -fullName)."
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string",
                            "enum": ["user", "admin", "all"],
                            "default": "all"
                        },
                        "description": "Filter users by their role."
                    },
                    {
                        "in": "query",
                        "name": "level",
                        "schema": {
                            "type": "string",
                            "enum": ["basic", "premium", "all"],
                            "default": "all"
                        },
                        "description": "Filter users by their member level."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserListSuccessResponse200"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "BadRequest": {
                                        "$ref": "#/components/examples/BadRequest"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access, token is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "$ref": "#/components/examples/Unauthorized"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden access, user is not an admin.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "Forbidden": {
                                        "$ref": "#/components/examples/Forbidden"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "TooManyRequests": {
                                        "$ref": "#/components/examples/TooManyRequests"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "$ref": "#/components/examples/InternalServerError"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userId}": {
            "get": {
                "summary": "Retrieves a specific user by their ID",
                "tags": ["User Management"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the user to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the user data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSuccessResponse200"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "BadRequest": {
                                        "$ref": "#/components/examples/BadRequest"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access, token is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "$ref": "#/components/examples/Unauthorized"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden access, user is not an admin or the owner of the account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "Forbidden": {
                                        "$ref": "#/components/examples/Forbidden"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User with the given ID not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "NotFound": {
                                        "$ref": "#/components/examples/NotFound"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "TooManyRequests": {
                                        "$ref": "#/components/examples/TooManyRequests"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "$ref": "#/components/examples/InternalServerError"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Updates a specific user by their ID",
                "tags": ["User Management"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the user to update."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the user data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSuccessResponse200"
                                },
                                "examples": {
                                    "success": {
                                        "summary": "A successful user update response",
                                        "value": {
                                            "success": true,
                                            "statusCode": 200,
                                            "message": "Successfully updated user data.",
                                            "data": {
                                                "user": {
                                                    "id": 2,
                                                    "email": "janedoe.updated@mail.com",
                                                    "fullName": "Jane Doe Updated",
                                                    "memberLevel": "Premium",
                                                    "role": "User",
                                                    "pictureUrl": "https://example.com/picture.jpg",
                                                    "createdAt": "2025-07-07T08:08:00.080Z",
                                                    "updatedAt": "2025-07-07T09:00:00.000Z"
                                                }
                                            },
                                            "errors": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID format or request body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "BadRequest": {
                                        "$ref": "#/components/examples/BadRequest"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access, token is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "$ref": "#/components/examples/Unauthorized"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden access, user is not an admin or the owner of the account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "Forbidden": {
                                        "$ref": "#/components/examples/Forbidden"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User with the given ID not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "NotFound": {
                                        "$ref": "#/components/examples/NotFound"
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "$ref": "#/components/examples/UnsupportedMediaType"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "TooManyRequests": {
                                        "$ref": "#/components/examples/TooManyRequests"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "$ref": "#/components/examples/InternalServerError"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a specific user by their ID",
                "tags": ["User Management"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The ID of the user to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the user account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDeleteSuccessResponse200"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "BadRequest": {
                                        "$ref": "#/components/examples/BadRequest"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access, token is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "$ref": "#/components/examples/Unauthorized"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden access, user is not an admin or the owner of the account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "Forbidden": {
                                        "$ref": "#/components/examples/Forbidden"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User with the given ID not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "NotFound": {
                                        "$ref": "#/components/examples/NotFound"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "TooManyRequests": {
                                        "$ref": "#/components/examples/TooManyRequests"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "$ref": "#/components/examples/InternalServerError"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "summary": "Registers a new user account",
                "tags": ["User Authentication"],
                "produces": ["application/json"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisterSuccessResponse201"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "BadRequest": {
                                        "$ref": "#/components/examples/BadRequest"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "Conflict": {
                                        "$ref": "#/components/examples/Conflict"
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "$ref": "#/components/examples/UnsupportedMediaType"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "TooManyRequests": {
                                        "$ref": "#/components/examples/TooManyRequests"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "$ref": "#/components/examples/InternalServerError"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "summary": "Logs in a user account",
                "tags": ["User Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginSuccessResponse200"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "BadRequest": {
                                        "$ref": "#/components/examples/BadRequest"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "$ref": "#/components/examples/Unauthorized"
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "$ref": "#/components/examples/UnsupportedMediaType"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "TooManyRequests": {
                                        "$ref": "#/components/examples/TooManyRequests"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "$ref": "#/components/examples/InternalServerError"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "summary": "Logs out a user account",
                "tags": ["User Authentication"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Bearer JWT access token",
                        "schema": {
                            "type": "string",
                            "format": "JWT"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutSuccessResponse200"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "$ref": "#/components/examples/Unauthorized"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "TooManyRequests": {
                                        "$ref": "#/components/examples/TooManyRequests"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "$ref": "#/components/examples/InternalServerError"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/forgot-password": {
            "post": {
                "summary": "Sends an email with a URL to reset password",
                "tags": ["User Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForgotPasswordSuccessResponse200"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "BadRequest": {
                                        "$ref": "#/components/examples/BadRequest"
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "$ref": "#/components/examples/UnsupportedMediaType"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "TooManyRequests": {
                                        "$ref": "#/components/examples/TooManyRequests"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "$ref": "#/components/examples/InternalServerError"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reset-password": {
            "post": {
                "summary": "Resets a user's password",
                "tags": ["User Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResetPasswordSuccessResponse200"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body or expired/invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "BadRequest": {
                                        "$ref": "#/components/examples/BadRequest"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User with the given userId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "NotFound": {
                                        "$ref": "#/components/examples/NotFound"
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "$ref": "#/components/examples/UnsupportedMediaType"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "TooManyRequests": {
                                        "$ref": "#/components/examples/TooManyRequests"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailedResponse"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "$ref": "#/components/examples/InternalServerError"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "memberLevel": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "pictureUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Pagination": {
                "type": "object",
                "properties": {
                    "currentRecords": {
                        "type": "integer"
                    },
                    "totalRecords": {
                        "type": "integer"
                    },
                    "currentPage": {
                        "type": "integer"
                    },
                    "totalPages": {
                        "type": "integer"
                    },
                    "nextPage": {
                        "type": "integer",
                        "nullable": true
                    },
                    "prevPage": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "RegisterRequestBody": {
                "type": "object",
                "properties": {
                    "fullName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "example": {
                    "fullName": "John Doe",
                    "email": "johndoe@mail.com",
                    "password": "Weakpassword321"
                }
            },
            "LoginRequestBody": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "example": {
                    "email": "johndoe@mail.com",
                    "password": "Weakpassword321"
                }
            },
            "ForgotPasswordRequestBody": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "example": {
                    "email": "johndoe@mail.com"
                }
            },
            "ResetPasswordRequestBody": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "integer"
                    },
                    "token": {
                        "type": "string",
                        "description": "The 64-character hexadecimal reset token"
                    },
                    "newPassword": {
                        "type": "string",
                        "format": "password"
                    },
                    "confirmNewPassword": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "example": {
                    "userId": 1,
                    "token": "c0ae8bc1c8ad1eea5d936c622a6850b984459d5bfd999552dc4cbecb54d02efe",
                    "newPassword": "NewStrongPassword123!",
                    "confirmNewPassword": "NewStrongPassword123!"
                }
            },
            "UserUpdateRequestBody": {
                "type": "object",
                "properties": {
                    "fullName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "maxLength": 72
                    }
                },
                "example": {
                    "fullName": "John Doe Updated",
                    "email": "johndoe.new@mail.com"
                }
            },
            "FailedResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true,
                        "example": null
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "context": {
                                    "type": "object",
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": [
                                                "string",
                                                "integer",
                                                "object"
                                            ],
                                            "nullable": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "RegisterSuccessResponse201": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true
                    }
                },
                "example": {
                    "success": true,
                    "statusCode": 201,
                    "message": "Successfully registered a new user account.",
                    "data": {
                        "user": {
                            "id": 1,
                            "email": "johndoe@mail.com",
                            "fullName": "John Doe",
                            "memberLevel": "Basic",
                            "role": "User",
                            "pictureUrl": null,
                            "createdAt": "2025-06-06T08:08:00.080Z",
                            "updatedAt": "2025-06-06T08:08:00.080Z"
                        }
                    },
                    "errors": null
                }
            },
            "LoginSuccessResponse200": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "accessToken": {
                                "type": "string"
                            }
                        }
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true
                    }
                },
                "example": {
                    "success": true,
                    "statusCode": 200,
                    "message": "Successfully logged in.",
                    "data": {
                        "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcm5hbWUiOiJBbGV4YSIsImlhdCI6MTczODg0NTcxMiwiZXhwIjoxNzM5NDUwNTEyfQ.jaOEpQcfyzZs7sDWz6cG7k3oShiFQkj0wkhEabaScOA"
                    },
                    "errors": null
                }
            },
            "LogoutSuccessResponse200": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true
                    }
                },
                "example": {
                    "success": true,
                    "statusCode": 200,
                    "message": "Successfully logged out.",
                    "data": null,
                    "errors": null
                }
            },
            "ForgotPasswordSuccessResponse200": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true
                    }
                },
                "example": {
                    "success": true,
                    "statusCode": 200,
                    "message": "Successfully sent password reset link to your email.",
                    "data": null,
                    "errors": null
                }
            },
            "ResetPasswordSuccessResponse200": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true
                    }
                },
                "example": {
                    "success": true,
                    "statusCode": 200,
                    "message": "Successfully reset your password.",
                    "data": null,
                    "errors": null
                }
            },
            "UserListSuccessResponse200": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "users": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true
                    }
                },
                "example": {
                    "success": true,
                    "statusCode": 200,
                    "message": "Successfully retrieved all user data.",
                    "data": {
                        "users": [
                            {
                                "id": 1,
                                "email": "admin@example.com",
                                "fullName": "Admin User",
                                "memberLevel": "Premium",
                                "role": "Admin",
                                "pictureUrl": "https://example.com/pic.jpg",
                                "createdAt": "2025-09-21T12:00:00.000Z",
                                "updatedAt": "2025-09-21T12:00:00.000Z"
                            }
                        ]
                    },
                    "pagination": {
                        "currentRecords": 1,
                        "totalRecords": 1,
                        "currentPage": 1,
                        "totalPages": 1,
                        "nextPage": null,
                        "prevPage": null
                    },
                    "errors": null
                }
            },
            "UserSuccessResponse200": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true
                    }
                },
                "example": {
                    "success": true,
                    "statusCode": 200,
                    "message": "Successfully retrieved user data.",
                    "data": {
                        "user": {
                            "id": 1,
                            "email": "johndoe@mail.com",
                            "fullName": "John Doe",
                            "memberLevel": "Basic",
                            "role": "User",
                            "pictureUrl": null,
                            "createdAt": "2025-06-06T08:08:00.080Z",
                            "updatedAt": "2025-06-06T08:08:00.080Z"
                        }
                    },
                    "errors": null
                }
            },
            "UserDeleteSuccessResponse200": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "nullable": true
                    },
                    "errors": {
                        "type": "array",
                        "nullable": true
                    }
                },
                "example": {
                    "success": true,
                    "statusCode": 200,
                    "message": "Successfully deleted a user account.",
                    "data": null,
                    "errors": null
                }
            }
        },
        "examples": {
            "BadRequest": {
                "summary": "Validation Error",
                "value": {
                    "success": false,
                    "statusCode": 400,
                    "data": null,
                    "message": "Request body validation error.",
                    "errors": [
                        {
                            "message": "\"email\" must be a valid email",
                            "context": {
                                "key": "email",
                                "value": "invalid-email"
                            }
                        }
                    ]
                }
            },
            "Unauthorized": {
                "summary": "Unauthorized",
                "value": {
                    "success": false,
                    "statusCode": 401,
                    "message": "Unauthorized.",
                    "data": null,
                    "errors": [
                        {
                            "message": "Invalid or expired token.",
                            "context": {
                                "key": "request.headers.authorization",
                                "value": null
                            }
                        }
                    ]
                }
            },
            "Forbidden": {
                "summary": "Forbidden",
                "value": {
                    "success": false,
                    "statusCode": 403,
                    "data": null,
                    "message": "Forbidden.",
                    "errors": [
                        {
                            "message": "You do not have the necessary permissions to access this resource.",
                            "context": {
                                "key": "role",
                                "value": "User"
                            }
                        }
                    ]
                }
            },
            "NotFound": {
                "summary": "Not Found",
                "value": {
                    "success": false,
                    "statusCode": 404,
                    "data": null,
                    "message": "Resource not found.",
                    "errors": [
                        {
                            "message": "User with \"userId\" does not exist",
                            "context": {
                                "key": "userId",
                                "value": 9999
                            }
                        }
                    ]
                }
            },
            "Conflict": {
                "summary": "Conflict",
                "value": {
                    "success": false,
                    "statusCode": 409,
                    "data": null,
                    "message": "Resource conflict.",
                    "errors": [
                        {
                            "message": "email is already registered.",
                            "context": {
                                "key": "email",
                                "value": "johndoe@mail.com"
                            }
                        }
                    ]
                }
            },
            "UnsupportedMediaType": {
                "summary": "Unsupported Media Type",
                "value": {
                    "success": false,
                    "statusCode": 415,
                    "data": null,
                    "message": "Unsupported Media Type.",
                    "errors": [
                        {
                            "message": "Content-Type headers must be application/json",
                            "context": {
                                "key": "Content-Type",
                                "value": "multipart/form-data; boundary=--------------------------006985592206444069082103"
                            }
                        }
                    ]
                }
            },
            "TooManyRequests": {
                "summary": "Too Many Requests",
                "value": {
                    "success": false,
                    "statusCode": 429,
                    "message": "Too many requests.",
                    "data": null,
                    "errors": null
                }
            },
            "InternalServerError": {
                "summary": "Internal Server Error",
                "value": {
                    "success": false,
                    "statusCode": 500,
                    "data": null,
                    "message": "There is an issue with the server.",
                    "errors": null
                }
            }
        }
    }
}
